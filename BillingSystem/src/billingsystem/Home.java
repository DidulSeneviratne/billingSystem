/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package billingsystem;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JToolBar;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

/**
 *
 * @author DulsaraDidul
 */
public class Home extends javax.swing.JFrame{
    int total = 0;
    double items = 0.0;
    int temp_tot = 0;
    double temp_item = 0;
    public static int balance = 0;
    public static String bill = "";
    JToolBar tB;
    JButton jB;
    JButton jB1;
    File file = new File("DailyBills.txt");
    Date date = new Date();
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    String formattedDate = dateFormat.format(date);
    String info = """
                  ---- Deepthi Tex ----
                  Sarathchandra Pooja Banda
                  ----- No. 28/B -----
                  --- Dehiwala Road ---
                  ---- Maharagama ----
                  ---- 0774946109 ----
                  """;

    /**
     * Creates new form Home
     */
    public Home(String bills) {
        initComponents();
        bill = bills;
        if(!"".equals(bill)){
            jTextArea1.setText(bill);
        }
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size.height/2 - getHeight()/2);
        TableModel model = jTable2.getModel();
        TableColumnModel columnModel = jTable2.getColumnModel();
        int rowCount = model.getRowCount();
        int colCount = model.getColumnCount();

        StringBuilder text = new StringBuilder();
        /*for (int i = 0; i < columnModel.getColumnCount() - 1; i++) {
          Object value = columnModel.getColumn(i).getHeaderValue();
            if (value != null) {
                text.append(value.toString()+"  ");
            }            
        }
        text.append("\n");*/
        for (int row = 0; row < rowCount; row++) {
            for (int col = 0; col < colCount; col++) {
                Object value = model.getValueAt(row, col);
                if (value != null) {
                    if(col == 4){
                        text.append("\n");
                        text.append(value.toString()+"  ");
                    }else{
                        text.append(value.toString()+"  ");
                    }
                }
            }
            text.append("\n");
        }
        Date date1 = new Date();
        SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
        String formattedTime = timeFormat.format(date1);
        String bill = "Date:- " + formattedDate + "\n"+
                "Time:- " + formattedTime + "\n\n" +
                info +
                "\n\n" +
                text+"\n" +
                "Thank you come again!";
        jRadioButton2.setSelected(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton15 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jSpinner5 = new javax.swing.JSpinner();
        jLabel32 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jTextField10 = new javax.swing.JTextField();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jLabel22 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jTextField12 = new javax.swing.JTextField();
        jRadioButton7 = new javax.swing.JRadioButton();
        jRadioButton8 = new javax.swing.JRadioButton();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jRadioButton9 = new javax.swing.JRadioButton();
        jRadioButton10 = new javax.swing.JRadioButton();
        jTextField13 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField7 = new javax.swing.JTextField();

        jLabel30.setText("Rs.0");

        jButton13.setText("Print");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("Add");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jLabel11.setText("Discount:");

        jTextField4.setText("0");
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jButton15.setText("Total only");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jLabel12.setText("Final Price:");

        jLabel31.setText("Item Count:");

        jSpinner5.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner5StateChanged(evt);
            }
        });

        jLabel32.setText("0");

        jLabel13.setText("                                                                                                      POS System");

        jLabel3.setText("Item Code:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Price:");

        jTextField5.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTextField5InputMethodTextChanged(evt);
            }
        });
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField5KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField5KeyTyped(evt);
            }
        });

        jLabel33.setText("Quantity:");

        jTextField6.setEditable(false);
        jTextField6.setText("0");
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jLabel34.setText("Discount for Total:");

        jLabel6.setText("Total:");

        jTextArea5.setEditable(false);
        jTextArea5.setColumns(20);
        jTextArea5.setRows(5);
        jScrollPane5.setViewportView(jTextArea5);

        jTextField10.setText("0");
        jTextField10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField10ActionPerformed(evt);
            }
        });
        jTextField10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField10KeyReleased(evt);
            }
        });

        jRadioButton3.setText("Percentage");

        jRadioButton4.setText("Price");

        jRadioButton5.setText("Percentage");

        jRadioButton6.setText("Price");

        jLabel22.setText("Cash:");

        jLabel23.setText("Printer");

        jLabel24.setText("Daily");
        jLabel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel24MouseClicked(evt);
            }
        });

        jButton7.setText("Print without bill");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(93, 93, 93)
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7)
                        .addGap(18, 18, 18)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton15, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel34)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel33)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField5)
                                .addComponent(jSpinner5)
                                .addComponent(jTextField6)
                                .addComponent(jTextField4)
                                .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jTextField10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jRadioButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButton4))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jRadioButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButton6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 188, Short.MAX_VALUE)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel24)))
                .addGap(16, 16, 16))
            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton4))
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(jLabel32)
                    .addComponent(jButton14))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRadioButton5)
                        .addComponent(jRadioButton6))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel34)
                        .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton15)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton13)
                    .addComponent(jLabel22)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7))
                .addGap(17, 17, 17))
        );

        jTextField12.setText("0");
        jTextField12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField12ActionPerformed(evt);
            }
        });
        jTextField12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField12KeyReleased(evt);
            }
        });

        jRadioButton7.setText("Percentage");

        jRadioButton8.setText("Price");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Item", "Count", "Price"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel21.setText("Daily");
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel21MouseClicked(evt);
            }
        });

        jLabel10.setText("                                                                                                      POS System");

        jLabel1.setText("Item Code:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0C", "1Y", "2M", "3G", "4S", "5L", "6U", "7C", "8U", "9TB" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jComboBox1KeyReleased(evt);
            }
        });

        jLabel2.setText("Price:");

        jTextField1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTextField1InputMethodTextChanged(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jLabel28.setText("Quantity:");

        jLabel9.setText("Total Price:");

        jTextField2.setEditable(false);
        jTextField2.setText("0");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel8.setText("Discount:");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField3KeyReleased(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Percentage");
        jRadioButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jRadioButton1KeyReleased(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Price");
        jRadioButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jRadioButton2KeyReleased(evt);
            }
        });

        jLabel4.setText("Total:");

        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText("Rs.0");

        jLabel26.setText("Item Count:");

        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("0");

        jLabel29.setText("Discount for Total:");

        jButton11.setText("Add");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jButton11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton11KeyReleased(evt);
            }
        });

        jButton12.setText("Total only");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jButton12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton12KeyReleased(evt);
            }
        });

        jButton10.setText("Print");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jButton10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton10KeyReleased(evt);
            }
        });

        jButton6.setText("Add without bill");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jButton6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton6KeyReleased(evt);
            }
        });

        jLabel19.setText("Cash:");

        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });
        jTextField9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField9KeyReleased(evt);
            }
        });

        buttonGroup2.add(jRadioButton9);
        jRadioButton9.setText("Percentage");
        jRadioButton9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jRadioButton9KeyReleased(evt);
            }
        });

        buttonGroup2.add(jRadioButton10);
        jRadioButton10.setText("Price");
        jRadioButton10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jRadioButton10KeyReleased(evt);
            }
        });

        jTextField13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });
        jTextField13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField13KeyReleased(evt);
            }
        });

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton2KeyReleased(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Count", "Unit", "Discount", "Final"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton3KeyReleased(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("QuickType", 1, 10)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setAlignmentX(0.25F);
        jTextArea1.setAlignmentY(0.25F);
        jTextArea1.setBorder(null);
        jTextArea1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jScrollPane3.setViewportView(jTextArea1);

        jTextField7.setText("0");
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });
        jTextField7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField7KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel21))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel19)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 407, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jButton6))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel29)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel28))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jRadioButton9)
                                        .addGap(12, 12, 12)
                                        .addComponent(jRadioButton10))
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jRadioButton1)
                                        .addGap(12, 12, 12)
                                        .addComponent(jRadioButton2))
                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE))
                                    .addComponent(jButton11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel26)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                .addGap(18, 18, 18))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                    .addGap(13, 13, 13)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)
                                .addComponent(jLabel25)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel27)
                                .addComponent(jLabel26))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jRadioButton1)
                                .addComponent(jRadioButton2)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton2)
                                    .addComponent(jButton3))
                                .addGap(18, 18, 18)
                                .addComponent(jButton11))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel28)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29)
                            .addComponent(jRadioButton9)
                            .addComponent(jRadioButton10)
                            .addComponent(jButton12)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel21)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton10)
                    .addComponent(jButton6)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(25, 25, 25)
                    .addComponent(jLabel10)
                    .addContainerGap(442, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseClicked
        this.setVisible(false);
        Daily_Report myframe;
        try {
            myframe = new Daily_Report(bill);
            myframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            myframe.setTitle("Daily Report");
            myframe.setSize(520,500);
            myframe.setVisible(true);
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jLabel21MouseClicked
    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextField1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextField1InputMethodTextChanged

    }//GEN-LAST:event_jTextField1InputMethodTextChanged

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed

    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        try{
            double i = Double.parseDouble(jTextField1.getText());
            double i1 = i * Double.parseDouble(jTextField7.getText());
            jTextField2.setText(String.valueOf((int)i1));
        }catch(Exception e){
            e.printStackTrace();
        }
        if(evt.getKeyCode()==KeyEvent.VK_F1){
            Home myframe = new Home(bill);
            myframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            myframe.setTitle("POS System");
            myframe.setSize(735,555);
            myframe.setVisible(true);
        }else if(evt.getKeyCode()==KeyEvent.VK_F2){
            jLabel4.setForeground(Color.red);
            jLabel26.setForeground(Color.red);
            jLabel21.setForeground(Color.red);
            jLabel1.setForeground(Color.red);
            jLabel2.setForeground(Color.red);
            jLabel28.setForeground(Color.red);
            jLabel9.setForeground(Color.red);
            jLabel8.setForeground(Color.red);
            jLabel29.setForeground(Color.red);
            jLabel19.setForeground(Color.red);
            jLabel10.setForeground(Color.red);
        }else if(evt.getKeyCode()==KeyEvent.VK_F3){
            try {
                jTextArea1.print();
            } catch (PrinterException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            jTextField3.requestFocus();
        }
    }//GEN-LAST:event_jTextField1KeyReleased

    public JTextArea getTextArea() {
        return jTextArea1;
    }
    
    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        jTextArea1.setText("");
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed

    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed

    }//GEN-LAST:event_jTextField3ActionPerformed

    public void print() {
        PrinterJob printerJob = PrinterJob.getPrinterJob();
        printerJob.setPrintable((Printable) this);

        if (printerJob.printDialog()) {
            try {
                printerJob.print();
            } catch (PrinterException e) {
                e.printStackTrace();
            }
        }
    }

    public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
        if (pageIndex > 0) {
            return Printable.NO_SUCH_PAGE;
        }

        Graphics2D g2d = (Graphics2D) graphics;
        g2d.translate(pageFormat.getImageableX(), pageFormat.getImageableY());
        // Adjust border size
        jTextArea1.setBorder(BorderFactory.createLineBorder(Color.BLACK, 2)); // Example: 2-pixel border
        // Draw JTextArea content
        jTextArea1.paint(g2d);
        return Printable.PAGE_EXISTS;
    }
    
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
            DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
            int selectedIndex = jComboBox1.getSelectedIndex();
            if((jRadioButton1.isSelected() || jRadioButton2.isSelected()) && "".equals(jTextField3.getText())){
                int price = Integer.parseInt(jTextField2.getText());
                String data[] = {jComboBox1.getItemAt(selectedIndex),jTextField7.getText()+"","Rs."+jTextField1.getText(),"Rs."+jTextField1.getText()+"x"+jTextField7.getText(),"Rs." + price};
                tblModel.addRow(data);
                total = total + price;
                items = items + Double.parseDouble(jTextField7.getText());
                jLabel25.setText(String.valueOf("Rs." + total));
                jLabel27.setText(String.valueOf(items));
            }else if(jRadioButton1.isSelected()){
                try{
                    int price = Integer.parseInt(jTextField2.getText());
                    int discount = Integer.parseInt(jTextField3.getText());
                    int f1 = price * discount/100;
                    int f2 = price - f1;
                    String data[] = {jComboBox1.getItemAt(selectedIndex),jTextField7.getText()+"","Rs."+jTextField1.getText(),"Rs."+jTextField1.getText()+"x"+(100-Integer.parseInt(jTextField3.getText()))+"%","Rs." + f2};
                    tblModel.addRow(data);
                    total = total + f2;
                    items = items + Double.parseDouble(jTextField7.getText());
                    jLabel25.setText(String.valueOf("Rs." + total));
                    jLabel27.setText(String.valueOf(items));
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
            }else if(jRadioButton2.isSelected()){
                try{
                    int discount = Integer.parseInt(jTextField3.getText());
                    int dis = Integer.parseInt(jTextField1.getText()) - discount;
                    int f1 = (int) (dis * Double.parseDouble(jTextField7.getText()));
                    int f = (int) (discount * Double.parseDouble(jTextField7.getText()));
                    String data[] = {jComboBox1.getItemAt(selectedIndex),jTextField7.getText()+"","Rs."+jTextField1.getText(),"Rs."+jTextField3.getText()+"x"+jTextField7.getText(),"Rs." + f};
                    tblModel.addRow(data);
                    total = total + f;
                    items = items + Double.parseDouble(jTextField7.getText());
                    jLabel25.setText(String.valueOf("Rs." + total));
                    jLabel27.setText(String.valueOf(items));
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
            }else{
                int price = Integer.parseInt(jTextField2.getText());
                String data[] = {jComboBox1.getItemAt(selectedIndex),jTextField7.getText()+"","Rs."+jTextField1.getText(),"Rs."+jTextField1.getText()+"x"+jTextField7.getText(),"Rs." + price};
                tblModel.addRow(data);
                total = total + price;
                items = items + Double.parseDouble(jTextField7.getText());
                jLabel25.setText(String.valueOf("Rs." + total));
                jLabel27.setText(String.valueOf(items));
            }
            jTextField1.setText("");
            jTextField3.setText("");
            jTextField7.setText("0");
            jComboBox1.requestFocus();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
        if((jRadioButton9.isSelected() || jRadioButton10.isSelected()) && "".equals(jTextField13.getText())){
            int price = total;
            String data[] = {"Total","","","Rs." + price};
            tblModel.addRow(data);
        }else if(jRadioButton9.isSelected()){
            try{
                int price = total;
                int discount = Integer.parseInt(jTextField13.getText());
                int f1 = price * discount/100;
                int f2 = price - f1;
                String data[] = {"Total","","","Rs." + f2};
            tblModel.addRow(data);
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
            }
        }else if(jRadioButton10.isSelected()){
            try{
                int price = total;
                int discount = Integer.parseInt(jTextField13.getText());
                int f = price - discount;
                String data[] = {"Total","","","Rs." + f};
                tblModel.addRow(data);
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
            }
        }else{
            int price = total;
            String data[] = {"Total","","","Rs." + price};
            tblModel.addRow(data);
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
        Color labelColor = jLabel10.getForeground();
        if(labelColor.equals(Color.RED)){
            try{
                if(!"".equals(jTextField9.getText())){
                    if((jRadioButton9.isSelected() || jRadioButton10.isSelected()) && "".equals(jTextField10.getText())){
                        int price = total;
                        total = price;
                    }else if(jRadioButton9.isSelected()){
                        try{
                            int price = total;
                            int discount = Integer.parseInt(jTextField13.getText());
                            int f1 = price * discount/100;
                            int f2 = price - f1;
                            total = f2;
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }else if(jRadioButton10.isSelected()){
                        try{
                            int price = total;
                            int discount = Integer.parseInt(jTextField13.getText());
                            int f = price - discount;
                            total = f;
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                    System.out.println(total);
                    balance = Integer.parseInt(jTextField9.getText()) - total;
                }else{
                    JOptionPane.showMessageDialog(null, "Please enter a numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
            }
            String data1[] = {"Cash","","","Rs." + Integer.parseInt(jTextField9.getText())};
            tblModel.addRow(data1);
            String data2[] = {"Balance","","","Rs." + balance};
            tblModel.addRow(data2);
            TableModel model = jTable2.getModel();
            TableColumnModel columnModel = jTable2.getColumnModel();
            int rowCount = model.getRowCount();
            int colCount = model.getColumnCount();
            try{
                StringBuilder text = new StringBuilder();
                /*for (int i = 0; i < columnModel.getColumnCount() - 1; i++) {
                    Object value = columnModel.getColumn(i).getHeaderValue();
                      if (value != null) {
                          text.append(value.toString()+"  ");
                      }                    
                }
                text.append("\n");*/
                for (int row = 0; row < rowCount; row++) {
                    for (int col = 0; col < colCount; col++) {
                        Object value = model.getValueAt(row, col);
                        if (value != null) {
                            if(col == 4){
                                text.append("\n");
                                text.append(value.toString()+"  ");
                            }else{
                                text.append(value.toString()+"  ");
                            }
                        }
                    }
                    text.append("\n");
                }
                Date date1 = new Date();
                SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
                String formattedTime = timeFormat.format(date1);
                String bill = "Date:- " + formattedDate + "\n"+
                        "Time:- " + formattedTime + "\n\n"+
                        info +
                        "\n\n" +
                        text+"\n" +
                        "Thank you come again!";
                jTextArea1.setText(bill);
                CustomPrintExample custom = new CustomPrintExample(jTextArea1);
                custom.print();
                this.setVisible(false);
                Balance myframe = new Balance(bill);
                myframe.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
                myframe.setTitle("Balance");
                myframe.setSize(375,175);
                myframe.setVisible(true);
            }catch(Exception e){
                System.out.println(e);
            }
        }else{
            try{
                if(!"".equals(jTextField9.getText())){
                    if((jRadioButton9.isSelected() || jRadioButton10.isSelected()) && "".equals(jTextField10.getText())){
                        int price = total;
                        total = price;
                    }else if(jRadioButton9.isSelected()){
                        try{
                            int price = total;
                            int discount = Integer.parseInt(jTextField13.getText());
                            int f1 = price * discount/100;
                            int f2 = price - f1;
                            total = f2;
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }else if(jRadioButton10.isSelected()){
                        try{
                            int price = total;
                            int discount = Integer.parseInt(jTextField13.getText());
                            int f = price - discount;
                            total = f;
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                    System.out.println(total);
                    if (!file.exists()) {
                        try {
                            file.createNewFile();
                        } catch (Exception e) {
                            System.out.println(e);
                        }
                    }
                    Date date = new Date();
                    SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    String formattedDate = formatter.format(date);
                    FileWriter writer;
                    try {
                        writer = new FileWriter(file, true);
                        writer.append("Rs." + total + " " + formattedDate + "\n");
                        // Write any other details you want to save to the file
                        writer.close();
                    } catch (IOException ex) {
                        System.out.println(ex);
                    }
                    balance = Integer.parseInt(jTextField9.getText()) - total;
                }else{
                    JOptionPane.showMessageDialog(null, "Please enter a numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
            }
            String data1[] = {"Cash","","","Rs." + Integer.parseInt(jTextField9.getText())};
            tblModel.addRow(data1);
            String data2[] = {"Balance","","","Rs." + balance};
            tblModel.addRow(data2);
            TableModel model = jTable2.getModel();
            TableColumnModel columnModel = jTable2.getColumnModel();
            int rowCount = model.getRowCount();
            int colCount = model.getColumnCount();
            try{
                StringBuilder text = new StringBuilder();
                /*for (int i = 0; i < columnModel.getColumnCount() - 1; i++) {
                    Object value = columnModel.getColumn(i).getHeaderValue();
                      if (value != null) {
                          text.append(value.toString()+"  ");
                      }                     
                }
                text.append("\n");*/
                for (int row = 0; row < rowCount; row++) {
                    for (int col = 0; col < colCount; col++) {
                        Object value = model.getValueAt(row, col);
                        if (value != null) {
                            if(col == 4){
                                text.append("\n");
                                text.append(value.toString()+"  ");
                            }else{
                                text.append(value.toString()+"  ");
                            }
                        }
                    }
                    text.append("\n");
                }
                Date date1 = new Date();
                SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
                String formattedTime = timeFormat.format(date1);
                String bill = "Date:- " + formattedDate + "\n"+
                        "Time:- " + formattedTime + "\n\n"+
                        info +
                        "\n\n" +
                        text+"\n" +
                        "Thank you come again!";
                jTextArea1.setText(bill);
                CustomPrintExample custom = new CustomPrintExample(jTextArea1);
                custom.print();
                this.setVisible(false);
                Balance myframe = new Balance(bill);
                myframe.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
                myframe.setTitle("Balance");
                myframe.setSize(375,175);
                myframe.setVisible(true);
            }catch(Exception e){
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
        Color labelColor = jLabel10.getForeground();
        if(labelColor.equals(Color.RED)){
            try{
                if(!"".equals(jTextField9.getText())){
                    if((jRadioButton9.isSelected() || jRadioButton10.isSelected()) && "".equals(jTextField10.getText())){
                        int price = total;
                        total = price;
                    }else if(jRadioButton9.isSelected()){
                        try{
                            int price = total;
                            int discount = Integer.parseInt(jTextField13.getText());
                            int f1 = price * discount/100;
                            int f2 = price - f1;
                            total = f2;
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }else if(jRadioButton10.isSelected()){
                        try{
                            int price = total;
                            int discount = Integer.parseInt(jTextField13.getText());
                            int f = price - discount;
                            total = f;
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                    System.out.println(total);
                    balance = Integer.parseInt(jTextField9.getText()) - total;
                }else{
                    JOptionPane.showMessageDialog(null, "Please enter a numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
            }
            String data1[] = {"Cash","","","Rs." + Integer.parseInt(jTextField9.getText())};
            tblModel.addRow(data1);
            String data2[] = {"Balance","","","Rs." + balance};
            tblModel.addRow(data2);
            TableModel model = jTable2.getModel();
            TableColumnModel columnModel = jTable2.getColumnModel();
            int rowCount = model.getRowCount();
            int colCount = model.getColumnCount() - 1;
            try{
                StringBuilder text = new StringBuilder();
                /*for (int i = 0; i < columnModel.getColumnCount() - 1; i++) {
                    Object value = columnModel.getColumn(i).getHeaderValue();
                      if (value != null) {
                          text.append(value.toString()+"  ");
                      }                    
                }
                text.append("\n");*/
                for (int row = 0; row < rowCount; row++) {
                    for (int col = 0; col < colCount; col++) {
                        Object value = model.getValueAt(row, col);
                        if (value != null) {
                            if(col == 4){
                                text.append("\n");
                                text.append(value.toString()+"  ");
                            }else{
                                text.append(value.toString()+"  ");
                            }
                        }
                    }
                    text.append("\n");
                }
                Date date1 = new Date();
                SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
                String formattedTime = timeFormat.format(date1);
                String bill = "Date:- " + formattedDate + "\n"+
                        "Time:- " + formattedTime + "\n\n"+
                        info +
                        "\n\n" +
                        text+"\n" +
                        "Thank you come again!";
                jTextArea1.setText(bill);
                this.setVisible(false);
                Balance myframe = new Balance(bill);
                myframe.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
                myframe.setTitle("Balance");
                myframe.setSize(375,175);
                myframe.setVisible(true);
            }catch(Exception e){
                System.out.println(e);
            }
        }else{
            try{
                if(!"".equals(jTextField9.getText())){
                    if((jRadioButton9.isSelected() || jRadioButton10.isSelected()) && "".equals(jTextField10.getText())){
                        int price = total;
                        total = price;
                    }else if(jRadioButton9.isSelected()){
                        try{
                            int price = total;
                            int discount = Integer.parseInt(jTextField13.getText());
                            int f1 = price * discount/100;
                            int f2 = price - f1;
                            total = f2;
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }else if(jRadioButton10.isSelected()){
                        try{
                            int price = total;
                            int discount = Integer.parseInt(jTextField13.getText());
                            int f = price - discount;
                            total = f;
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                    System.out.println(total);
                    if (!file.exists()) {
                        try {
                            file.createNewFile();
                        } catch (Exception e) {
                            System.out.println(e);
                        }
                    }
                    Date date = new Date();
                    SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    String formattedDate = formatter.format(date);
                    FileWriter writer;
                    try {
                        writer = new FileWriter(file, true);
                        writer.append("Rs." + total + " " + formattedDate + "\n");
                        // Write any other details you want to save to the file
                        writer.close();
                    } catch (IOException ex) {
                        System.out.println(ex);
                    }
                    balance = Integer.parseInt(jTextField9.getText()) - total;
                }else{
                    JOptionPane.showMessageDialog(null, "Please enter a numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
            }
            String data1[] = {"Cash","","","Rs." + Integer.parseInt(jTextField9.getText())};
            tblModel.addRow(data1);
            String data2[] = {"Balance","","","Rs." + balance};
            tblModel.addRow(data2);
            TableModel model = jTable2.getModel();
            TableColumnModel columnModel = jTable2.getColumnModel();
            int rowCount = model.getRowCount();
            int colCount = model.getColumnCount() - 1;
            try{
                StringBuilder text = new StringBuilder();
                /*for (int i = 0; i < columnModel.getColumnCount()  - 1; i++) {
                    Object value = columnModel.getColumn(i).getHeaderValue();
                      if (value != null) {
                          text.append(value.toString()+"  ");
                      }                     
                }
                text.append("\n");*/
                for (int row = 0; row < rowCount; row++) {
                    for (int col = 0; col < colCount; col++) {
                        Object value = model.getValueAt(row, col);
                        if (value != null) {
                            if(col == 4){
                                text.append("\n");
                                text.append(value.toString()+"  ");
                            }else{
                                text.append(value.toString()+"  ");
                            }
                        }
                    }
                    text.append("\n");
                }
                Date date1 = new Date();
                SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
                String formattedTime = timeFormat.format(date1);
                String bill = "Date:- " + formattedDate + "\n"+
                        "Time:- " + formattedTime + "\n\n"+
                        info +
                        "\n\n" +
                        text+"\n" +
                        "Thank you come again!";
                jTextArea1.setText(bill);
                this.setVisible(false);
                Balance myframe = new Balance(bill);
                myframe.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
                myframe.setTitle("Balance");
                myframe.setSize(375,175);
                myframe.setVisible(true);
            }catch(Exception e){
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        try{
            if(!"".equals(jTextField9.getText())){
                if((jRadioButton9.isSelected() || jRadioButton10.isSelected()) && "".equals(jTextField10.getText())){
                    int price = total;
                    total = price;
                }else if(jRadioButton9.isSelected()){
                    try{
                        int price = total;
                        int discount = Integer.parseInt(jTextField13.getText());
                        int f1 = price * discount/100;
                        int f2 = price - f1;
                        total = f2;
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                    }
                }else if(jRadioButton10.isSelected()){
                    try{
                        int price = total;
                        int discount = Integer.parseInt(jTextField13.getText());
                        int f = price - discount;
                        total = f;
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
                System.out.println(total);
                if (!file.exists()) {
                    try {
                        file.createNewFile();
                    } catch (IOException e) {
                        System.out.println(e);
                    }
                }
                Date date = new Date();
                SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                String formattedDate = formatter.format(date);
                FileWriter writer;
                try {
                    writer = new FileWriter(file, true);
                    writer.append("Rs." + total + " " + formattedDate + "\n");
                    // Write any other details you want to save to the file
                    writer.close();
                } catch (IOException ex) {
                    System.out.println(ex);
                }
                balance = Integer.parseInt(jTextField9.getText()) - total;
                this.setVisible(false);
                Balance myframe = new Balance(bill);
                myframe.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
                myframe.setTitle("Balance");
                myframe.setSize(375,175);
                myframe.setVisible(true);
            }else{
                JOptionPane.showMessageDialog(null, "Please enter a numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
        int selectedIndex = jComboBox1.getSelectedIndex();
        if((jRadioButton1.isSelected() || jRadioButton2.isSelected()) && "".equals(jTextField3.getText())){
            int price = Integer.parseInt(jTextField2.getText());
            String data[] = {jComboBox1.getItemAt(selectedIndex),jTextField7.getText(),"Rs."+jTextField2.getText(),"Rs." + price};
            tblModel.addRow(data);
            total = total + price;
            items = items + Double.parseDouble(jTextField7.getText());
            jLabel25.setText(String.valueOf("Rs." + total));
            jLabel27.setText(String.valueOf(items));
        }else if(jRadioButton1.isSelected()){
            try{
                int price = Integer.parseInt(jTextField2.getText());
                int discount = Integer.parseInt(jTextField3.getText());
                int f1 = price * discount/100;
                int f2 = price - f1;
                String data[] = {jComboBox1.getItemAt(selectedIndex),jTextField7.getText(),"Rs."+jTextField2.getText(),"Rs." + f2};
                tblModel.addRow(data);
                total = total + f2;
                items = items + Double.parseDouble(jTextField7.getText());
                jLabel25.setText(String.valueOf("Rs." + total));
                jLabel27.setText(String.valueOf(items));
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
            }
        }else if(jRadioButton2.isSelected()){
            try{
                int price = Integer.parseInt(jTextField2.getText());
                int discount = Integer.parseInt(jTextField3.getText());
                int f = price - discount;
                String data[] = {jComboBox1.getItemAt(selectedIndex),jTextField7.getText(),"Rs."+jTextField2.getText(),"Rs." + f};
                tblModel.addRow(data);
                total = total + f;
                items = items + Double.parseDouble(jTextField7.getText());
                jLabel25.setText(String.valueOf("Rs." + total));
                jLabel27.setText(String.valueOf(items));
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
            }
        }else{
            int price = Integer.parseInt(jTextField2.getText());
            String data[] = {jComboBox1.getItemAt(selectedIndex),jTextField7.getText(),"Rs."+jTextField2.getText(),"Rs." + price};
            tblModel.addRow(data);
            total = total + price;
            items = items + Double.parseDouble(jTextField7.getText());
            jLabel25.setText(String.valueOf("Rs." + total));
            jLabel27.setText(String.valueOf(items));
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed

    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
        if((jRadioButton4.isSelected() || jRadioButton3.isSelected()) && "".equals(jTextField10.getText())){
            int price = total;
            String data[] = {"Total","","","Rs." + price};
            tblModel.addRow(data);
        }else if(jRadioButton3.isSelected()){
            try{
                int price = total;
                int discount = Integer.parseInt(jTextField10.getText());
                int f1 = price * discount/100;
                int f2 = price - f1;
                String data[] = {"Total","","","Rs." + f2};
                tblModel.addRow(data);
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
            }
        }else if(jRadioButton4.isSelected()){
            try{
                int price = total;
                int discount = Integer.parseInt(jTextField10.getText());
                int f = price - discount;
                String data[] = {"Total","","","Rs." + f};
                tblModel.addRow(data);
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
            }
        }else{
            int price = total;
            String data[] = {"Total","","","Rs." + price};
            tblModel.addRow(data);
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jSpinner5StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner5StateChanged
        int i = Integer.parseInt(jTextField1.getText());
        i = (int) (i * Double.parseDouble(jTextField7.getText()));
        jTextField2.setText(String.valueOf(i));
    }//GEN-LAST:event_jSpinner5StateChanged

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jTextField5InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextField5InputMethodTextChanged

    }//GEN-LAST:event_jTextField5InputMethodTextChanged

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyPressed

    }//GEN-LAST:event_jTextField5KeyPressed

    private void jTextField5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyReleased
        try{
            int i = Integer.parseInt(jTextField1.getText());
            i = (int) (i * Double.parseDouble(jTextField7.getText()));
            jTextField2.setText(String.valueOf(i));
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jTextField5KeyReleased

    private void jTextField5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyTyped

    }//GEN-LAST:event_jTextField5KeyTyped

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed

    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField10ActionPerformed

    private void jTextField10KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField10KeyReleased

    }//GEN-LAST:event_jTextField10KeyReleased

    private void jLabel24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseClicked
        this.setVisible(false);
        /*Daily_Report myframe;
        try {
            myframe = new Daily_Report();
            myframe.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
            myframe.setTitle("Daily Report");
            myframe.setSize(525,500);
            myframe.setVisible(true);
        } catch (Exception ex) {
            System.out.println(ex);
        }*/
    }//GEN-LAST:event_jLabel24MouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try{
            if(!"".equals(jTextField9.getText())){
                if((jRadioButton4.isSelected() || jRadioButton3.isSelected()) && "".equals(jTextField10.getText())){
                    int price = total;
                    total = price;
                }else if(jRadioButton3.isSelected()){
                    try{
                        int price = total;
                        int discount = Integer.parseInt(jTextField10.getText());
                        int f1 = price * discount/100;
                        int f2 = price - f1;
                        total = f2;
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                    }
                }else if(jRadioButton4.isSelected()){
                    try{
                        int price = total;
                        int discount = Integer.parseInt(jTextField10.getText());
                        int f = price - discount;
                        total = f;
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
                System.out.println(total);
                if (!file.exists()) {
                    try {
                        file.createNewFile();
                    } catch (IOException e) {
                        System.out.println(e);
                    }
                }
                Date date = new Date();
                SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                String formattedDate = formatter.format(date);
                FileWriter writer;
                try {
                    writer = new FileWriter(file, true);
                    writer.append("Rs." + total + " " + formattedDate + "\n");
                    // Write any other details you want to save to the file
                    writer.close();
                } catch (IOException ex) {
                    System.out.println(ex);
                }
                balance = Integer.parseInt(jTextField9.getText()) - total;
                this.setVisible(false);
                Balance myframe = new Balance(bill);
                myframe.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
                myframe.setTitle("Balance");
                myframe.setSize(325,175);
                myframe.setVisible(true);
            }else{
                JOptionPane.showMessageDialog(null, "Please enter a numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTextField12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField12ActionPerformed

    private void jTextField12KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField12KeyReleased

    }//GEN-LAST:event_jTextField12KeyReleased

    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13ActionPerformed

    private void jComboBox1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_F1){
            Home myframe = new Home(bill);
            myframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            myframe.setTitle("POS System");
            myframe.setSize(735,555);
            myframe.setVisible(true);
        }else if(evt.getKeyCode()==KeyEvent.VK_F2){
            jLabel4.setForeground(Color.red);
            jLabel26.setForeground(Color.red);
            jLabel21.setForeground(Color.red);
            jLabel1.setForeground(Color.red);
            jLabel2.setForeground(Color.red);
            jLabel28.setForeground(Color.red);
            jLabel9.setForeground(Color.red);
            jLabel8.setForeground(Color.red);
            jLabel29.setForeground(Color.red);
            jLabel19.setForeground(Color.red);
            jLabel10.setForeground(Color.red);
        }else if(evt.getKeyCode()==KeyEvent.VK_F3){
            try {
                jTextArea1.print();
            } catch (PrinterException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            jTextField1.requestFocus();
        }
    }//GEN-LAST:event_jComboBox1KeyReleased

    private void jTextField3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_F1){
            Home myframe = new Home(bill);
            myframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            myframe.setTitle("POS System");
            myframe.setSize(735,555);
            myframe.setVisible(true);
        }else if(evt.getKeyCode()==KeyEvent.VK_F2){
            jLabel4.setForeground(Color.red);
            jLabel26.setForeground(Color.red);
            jLabel21.setForeground(Color.red);
            jLabel1.setForeground(Color.red);
            jLabel2.setForeground(Color.red);
            jLabel28.setForeground(Color.red);
            jLabel9.setForeground(Color.red);
            jLabel8.setForeground(Color.red);
            jLabel29.setForeground(Color.red);
            jLabel19.setForeground(Color.red);
            jLabel10.setForeground(Color.red);
        }else if(evt.getKeyCode()==KeyEvent.VK_F3){
            try {
                jTextArea1.print();
            } catch (PrinterException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            jTextField7.requestFocus();
        }
    }//GEN-LAST:event_jTextField3KeyReleased

    private void jRadioButton1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jRadioButton1KeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_F1){
            Home myframe = new Home(bill);
            myframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            myframe.setTitle("POS System");
            myframe.setSize(735,555);
            myframe.setVisible(true);
        }else if(evt.getKeyCode()==KeyEvent.VK_F2){
            jLabel4.setForeground(Color.red);
            jLabel26.setForeground(Color.red);
            jLabel21.setForeground(Color.red);
            jLabel1.setForeground(Color.red);
            jLabel2.setForeground(Color.red);
            jLabel28.setForeground(Color.red);
            jLabel9.setForeground(Color.red);
            jLabel8.setForeground(Color.red);
            jLabel29.setForeground(Color.red);
            jLabel19.setForeground(Color.red);
            jLabel10.setForeground(Color.red);
        }else if(evt.getKeyCode()==KeyEvent.VK_F3){
            try {
                jTextArea1.print();
            } catch (PrinterException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            jRadioButton2.requestFocus();
        }
    }//GEN-LAST:event_jRadioButton1KeyReleased

    private void jRadioButton2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jRadioButton2KeyReleased
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_F1 -> {
                Home myframe = new Home(bill);
                myframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
                myframe.setTitle("POS System");
                myframe.setSize(735,555);
                myframe.setVisible(true);
            }
            case KeyEvent.VK_F2 -> {
                jLabel4.setForeground(Color.red);
                jLabel26.setForeground(Color.red);
                jLabel21.setForeground(Color.red);
                jLabel1.setForeground(Color.red);
                jLabel2.setForeground(Color.red);
                jLabel28.setForeground(Color.red);
                jLabel9.setForeground(Color.red);
                jLabel8.setForeground(Color.red);
                jLabel29.setForeground(Color.red);
                jLabel19.setForeground(Color.red);
                jLabel10.setForeground(Color.red);
            }
            case KeyEvent.VK_F3 -> {
                try {
                    jTextArea1.print();
                } catch (PrinterException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            case KeyEvent.VK_ENTER -> {
                jButton11.requestFocus();
            }
            default -> {
            }
        }
    }//GEN-LAST:event_jRadioButton2KeyReleased

    private void jTextField13KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField13KeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_F1){
            Home myframe = new Home(bill);
            myframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            myframe.setTitle("POS System");
            myframe.setSize(735,555);
            myframe.setVisible(true);
        }else if(evt.getKeyCode()==KeyEvent.VK_F2){
            jLabel4.setForeground(Color.red);
            jLabel26.setForeground(Color.red);
            jLabel21.setForeground(Color.red);
            jLabel1.setForeground(Color.red);
            jLabel2.setForeground(Color.red);
            jLabel28.setForeground(Color.red);
            jLabel9.setForeground(Color.red);
            jLabel8.setForeground(Color.red);
            jLabel29.setForeground(Color.red);
            jLabel19.setForeground(Color.red);
            jLabel10.setForeground(Color.red);
        }else if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            jRadioButton9.requestFocus();
        }
    }//GEN-LAST:event_jTextField13KeyReleased

    private void jRadioButton9KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jRadioButton9KeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_F1){
            Home myframe = new Home(bill);
            myframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            myframe.setTitle("POS System");
            myframe.setSize(735,555);
            myframe.setVisible(true);
        }else if(evt.getKeyCode()==KeyEvent.VK_F2){
            jLabel4.setForeground(Color.red);
            jLabel26.setForeground(Color.red);
            jLabel21.setForeground(Color.red);
            jLabel1.setForeground(Color.red);
            jLabel2.setForeground(Color.red);
            jLabel28.setForeground(Color.red);
            jLabel9.setForeground(Color.red);
            jLabel8.setForeground(Color.red);
            jLabel29.setForeground(Color.red);
            jLabel19.setForeground(Color.red);
            jLabel10.setForeground(Color.red);
        }else if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            jRadioButton10.requestFocus();
        }
    }//GEN-LAST:event_jRadioButton9KeyReleased

    private void jRadioButton10KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jRadioButton10KeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_F1){
            Home myframe = new Home(bill);
            myframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            myframe.setTitle("POS System");
            myframe.setSize(735,555);
            myframe.setVisible(true);
        }else if(evt.getKeyCode()==KeyEvent.VK_F2){
            jLabel4.setForeground(Color.red);
            jLabel26.setForeground(Color.red);
            jLabel21.setForeground(Color.red);
            jLabel1.setForeground(Color.red);
            jLabel2.setForeground(Color.red);
            jLabel28.setForeground(Color.red);
            jLabel9.setForeground(Color.red);
            jLabel8.setForeground(Color.red);
            jLabel29.setForeground(Color.red);
            jLabel19.setForeground(Color.red);
            jLabel10.setForeground(Color.red);
        }else if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            jButton12.requestFocus();
        }
    }//GEN-LAST:event_jRadioButton10KeyReleased

    private void jButton11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton11KeyReleased
        DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
        int selectedIndex = jComboBox1.getSelectedIndex();
        if(evt.getKeyCode()==KeyEvent.VK_F1){
            Home myframe = new Home(bill);
            myframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            myframe.setTitle("POS System");
            myframe.setSize(735,555);
            myframe.setVisible(true);
        }else if(evt.getKeyCode()==KeyEvent.VK_F2){
            jLabel4.setForeground(Color.red);
            jLabel26.setForeground(Color.red);
            jLabel21.setForeground(Color.red);
            jLabel1.setForeground(Color.red);
            jLabel2.setForeground(Color.red);
            jLabel28.setForeground(Color.red);
            jLabel9.setForeground(Color.red);
            jLabel8.setForeground(Color.red);
            jLabel29.setForeground(Color.red);
            jLabel19.setForeground(Color.red);
            jLabel10.setForeground(Color.red);
        }else if(evt.getKeyCode()==KeyEvent.VK_F3){
            try {
                jTextArea1.print();
            } catch (PrinterException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            if((jRadioButton1.isSelected() || jRadioButton2.isSelected()) && "".equals(jTextField3.getText())){
                int price = Integer.parseInt(jTextField2.getText());
                String data[] = {jComboBox1.getItemAt(selectedIndex),jTextField7.getText()+"","Rs."+jTextField1.getText(),"Rs."+jTextField1.getText()+"x"+jTextField7.getText(),"Rs." + price};
                tblModel.addRow(data);
                total = total + price;
                items = items + Double.parseDouble(jTextField7.getText());
                jLabel25.setText(String.valueOf("Rs." + total));
                jLabel27.setText(String.valueOf(items));
            }else if(jRadioButton1.isSelected()){
                try{
                    int price = Integer.parseInt(jTextField2.getText());
                    int discount = Integer.parseInt(jTextField3.getText());
                    int f1 = price * discount/100;
                    int f2 = price - f1;
                    String data[] = {jComboBox1.getItemAt(selectedIndex),jTextField7.getText()+"","Rs."+jTextField1.getText(),"Rs."+jTextField1.getText()+"x"+(100-Integer.parseInt(jTextField3.getText()))+"%","Rs." + f2};
                    tblModel.addRow(data);
                    total = total + f2;
                    items = items + Double.parseDouble(jTextField7.getText());
                    jLabel25.setText(String.valueOf("Rs." + total));
                    jLabel27.setText(String.valueOf(items));
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
            }else if(jRadioButton2.isSelected()){
                try{
                    int discount = Integer.parseInt(jTextField3.getText());
                    int dis = Integer.parseInt(jTextField1.getText()) - discount;
                    int f1 = (int) (dis * Double.parseDouble(jTextField7.getText()));
                    int f = (int) (discount * Double.parseDouble(jTextField7.getText()));
                    String data[] = {jComboBox1.getItemAt(selectedIndex),jTextField7.getText()+"","Rs."+jTextField1.getText(),"Rs."+jTextField3.getText()+"x"+jTextField7.getText(),"Rs." + f};
                    tblModel.addRow(data);
                    total = total + f;
                    items = items + Double.parseDouble(jTextField7.getText());
                    jLabel25.setText(String.valueOf("Rs." + total));
                    jLabel27.setText(String.valueOf(items));
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
            }else{
                int price = Integer.parseInt(jTextField2.getText());
                String data[] = {jComboBox1.getItemAt(selectedIndex),jTextField7.getText()+"","Rs."+jTextField1.getText(),"Rs."+jTextField1.getText()+"x"+jTextField7.getText(),"Rs." + price};
                tblModel.addRow(data);
                total = total + price;
                items = items + Double.parseDouble(jTextField7.getText());
                jLabel25.setText(String.valueOf("Rs." + total));
                jLabel27.setText(String.valueOf(items));
            }
            jTextField1.setText("");
            jTextField3.setText("");
            jTextField7.setText("0");
            jComboBox1.requestFocus();
        }
    }//GEN-LAST:event_jButton11KeyReleased

    private void jButton12KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton12KeyReleased
        DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
        if(evt.getKeyCode()==KeyEvent.VK_F1){
            Home myframe = new Home(bill);
            myframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            myframe.setTitle("POS System");
            myframe.setSize(735,555);
            myframe.setVisible(true);
        }else if(evt.getKeyCode()==KeyEvent.VK_F2){
            jLabel4.setForeground(Color.red);
            jLabel26.setForeground(Color.red);
            jLabel21.setForeground(Color.red);
            jLabel1.setForeground(Color.red);
            jLabel2.setForeground(Color.red);
            jLabel28.setForeground(Color.red);
            jLabel9.setForeground(Color.red);
            jLabel8.setForeground(Color.red);
            jLabel29.setForeground(Color.red);
            jLabel19.setForeground(Color.red);
            jLabel10.setForeground(Color.red);
        }else if(evt.getKeyCode()==KeyEvent.VK_F3){
            try {
                jTextArea1.print();
            } catch (PrinterException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            if((jRadioButton9.isSelected() || jRadioButton10.isSelected()) && "".equals(jTextField13.getText())){
                int price = total;
                String data[] = {"Total","","","Rs." + price};
                tblModel.addRow(data);
            }else if(jRadioButton9.isSelected()){
                try{
                    int price = total;
                    int discount = Integer.parseInt(jTextField13.getText());
                    int f1 = price * discount/100;
                    int f2 = price - f1;
                    String data[] = {"Total","","","Rs." + f2};
                    tblModel.addRow(data);
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
            }else if(jRadioButton10.isSelected()){
                try{
                    int price = total;
                    int discount = Integer.parseInt(jTextField13.getText());
                    int f = price - discount;
                    String data[] = {"Total","","","Rs." + f};
                tblModel.addRow(data);
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
            }else{
                int price = total;
                String data[] = {"Total","","","Rs." + price};
                tblModel.addRow(data);
            }
            jTextField9.requestFocus();
        }
    }//GEN-LAST:event_jButton12KeyReleased

    private void jButton6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton6KeyReleased
        DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
        if(evt.getKeyCode()==KeyEvent.VK_F1){
            Home myframe = new Home(bill);
            myframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            myframe.setTitle("POS System");
            myframe.setSize(735,555);
            myframe.setVisible(true);
        }else if(evt.getKeyCode()==KeyEvent.VK_F2){
            jLabel4.setForeground(Color.red);
            jLabel26.setForeground(Color.red);
            jLabel21.setForeground(Color.red);
            jLabel1.setForeground(Color.red);
            jLabel2.setForeground(Color.red);
            jLabel28.setForeground(Color.red);
            jLabel9.setForeground(Color.red);
            jLabel8.setForeground(Color.red);
            jLabel29.setForeground(Color.red);
            jLabel19.setForeground(Color.red);
            jLabel10.setForeground(Color.red);
        }else if(evt.getKeyCode()==KeyEvent.VK_F3){
            try {
                jTextArea1.print();
            } catch (PrinterException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Color labelColor = jLabel10.getForeground();
            if(labelColor.equals(Color.RED)){
                try{
                    if(!"".equals(jTextField9.getText())){
                        if((jRadioButton9.isSelected() || jRadioButton10.isSelected()) && "".equals(jTextField10.getText())){
                            int price = total;
                            total = price;
                        }else if(jRadioButton9.isSelected()){
                            try{
                                int price = total;
                                int discount = Integer.parseInt(jTextField13.getText());
                                int f1 = price * discount/100;
                                int f2 = price - f1;
                                total = f2;
                            }catch(Exception e){
                                JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                            }
                        }else if(jRadioButton10.isSelected()){
                            try{
                                int price = total;
                                int discount = Integer.parseInt(jTextField13.getText());
                                int f = price - discount;
                                total = f;
                            }catch(Exception e){
                                JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                            }
                        }
                        System.out.println(total);
                        balance = Integer.parseInt(jTextField9.getText()) - total;
                    }else{
                        JOptionPane.showMessageDialog(null, "Please enter a numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                    }
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
                String data1[] = {"Cash","","","Rs." + Integer.parseInt(jTextField9.getText())};
                tblModel.addRow(data1);
                String data2[] = {"Balance","","","Rs." + balance};
                tblModel.addRow(data2);
                TableModel model = jTable2.getModel();
                TableColumnModel columnModel = jTable2.getColumnModel();
                int rowCount = model.getRowCount();
                int colCount = model.getColumnCount() - 1;
                try{
                    StringBuilder text = new StringBuilder();
                    /*for (int i = 0; i < columnModel.getColumnCount() - 1; i++) {
                        Object value = columnModel.getColumn(i).getHeaderValue();
                          if (value != null) {
                              text.append(value.toString()+"  ");
                          }                         
                    }
                    text.append("\n");*/
                    for (int row = 0; row < rowCount; row++) {
                        for (int col = 0; col < colCount; col++) {
                            Object value = model.getValueAt(row, col);
                            if (value != null) {
                                if(col == 4){
                                    text.append("\n");
                                    text.append(value.toString()+"  ");
                                }else{
                                    text.append(value.toString()+"  ");
                                }
                            }
                        }
                        text.append("\n");
                    }
                    Date date1 = new Date();
                    SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
                    String formattedTime = timeFormat.format(date1);
                    String bill = "Date:- " + formattedDate + "\n"+
                        "Time:- " + formattedTime + "\n\n"+
                        info +
                        "\n\n" +
                        text+"\n" +
                        "Thank you come again!";
                    jTextArea1.setText(bill);
                    this.setVisible(false);
                    Balance myframe = new Balance(bill);
                    myframe.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
                    myframe.setTitle("Balance");
                    myframe.setSize(375,175);
                    myframe.setVisible(true);
                }catch(Exception e){
                    System.out.println(e);
                }
            }else{
                try{
                    if(!"".equals(jTextField9.getText())){
                        if((jRadioButton9.isSelected() || jRadioButton10.isSelected()) && "".equals(jTextField10.getText())){
                            int price = total;
                            total = price;
                        }else if(jRadioButton9.isSelected()){
                            try{
                                int price = total;
                                int discount = Integer.parseInt(jTextField13.getText());
                                int f1 = price * discount/100;
                                int f2 = price - f1;
                                total = f2;
                            }catch(Exception e){
                                JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                            }
                        }else if(jRadioButton10.isSelected()){
                            try{
                                int price = total;
                                int discount = Integer.parseInt(jTextField13.getText());
                                int f = price - discount;
                                total = f;
                            }catch(Exception e){
                                JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                            }
                        }
                        System.out.println(total);
                        if (!file.exists()) {
                            try {
                                file.createNewFile();
                            } catch (Exception e) {
                                System.out.println(e);
                            }
                        }
                        Date date = new Date();
                        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                        String formattedDate = formatter.format(date);
                        FileWriter writer;
                        try {
                            writer = new FileWriter(file, true);
                            writer.append("Rs." + total + " " + formattedDate + "\n");
                            // Write any other details you want to save to the file
                            writer.close();
                        } catch (IOException ex) {
                            System.out.println(ex);
                        }
                        balance = Integer.parseInt(jTextField9.getText()) - total;
                    }else{
                        JOptionPane.showMessageDialog(null, "Please enter a numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                    }
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
                String data1[] = {"Cash","","","Rs." + Integer.parseInt(jTextField9.getText())};
                tblModel.addRow(data1);
                String data2[] = {"Balance","","","Rs." + balance};
                tblModel.addRow(data2);
                TableModel model = jTable2.getModel();
                TableColumnModel columnModel = jTable2.getColumnModel();
                int rowCount = model.getRowCount();
                int colCount = model.getColumnCount() - 1;
                try{
                    StringBuilder text = new StringBuilder();
                    /*for (int i = 0; i < columnModel.getColumnCount() - 1; i++) {
                        Object value = columnModel.getColumn(i).getHeaderValue();
                          if (value != null) {
                              text.append(value.toString()+"  ");
                          }                        
                    }
                    text.append("\n");*/
                    for (int row = 0; row < rowCount; row++) {
                        for (int col = 0; col < colCount; col++) {
                            Object value = model.getValueAt(row, col);
                            if (value != null) {
                                if(col == 4){
                                    text.append("\n");
                                    text.append(value.toString()+"  ");
                                }else{
                                    text.append(value.toString()+"  ");
                                }
                            }
                        }
                        text.append("\n");
                    }
                    Date date1 = new Date();
                    SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
                    String formattedTime = timeFormat.format(date1);
                    String bill = "Date:- " + formattedDate + "\n"+
                        "Time:- " + formattedTime + "\n\n"+
                        info +
                        "\n\n" +
                        text+"\n" +
                        "Thank you come again!";
                    jTextArea1.setText(bill);
                    this.setVisible(false);
                    Balance myframe = new Balance(bill);
                    myframe.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
                    myframe.setTitle("Balance");
                    myframe.setSize(375,175);
                    myframe.setVisible(true);
                }catch(Exception e){
                    System.out.println(e);
                }
            }
            String data1[] = {"Cash","","","Rs." + Integer.parseInt(jTextField9.getText())};
            tblModel.addRow(data1);
            String data2[] = {"Balance","","","Rs." + balance};
            tblModel.addRow(data2);
            TableModel model = jTable2.getModel();
            TableColumnModel columnModel = jTable2.getColumnModel();
            int rowCount = model.getRowCount();
            int colCount = model.getColumnCount() - 1;
            try{
                StringBuilder text = new StringBuilder();
                /*for (int i = 0; i < columnModel.getColumnCount() - 1; i++) {
                    Object value = columnModel.getColumn(i).getHeaderValue();
                      if (value != null) {
                          text.append(value.toString()+"  ");
                      }                      
                }
                text.append("\n");*/
                for (int row = 0; row < rowCount; row++) {
                    for (int col = 0; col < colCount; col++) {
                        Object value = model.getValueAt(row, col);
                        if (value != null) {
                            if(col == 4){
                                text.append("\n");
                                text.append(value.toString()+"  ");
                            }else{
                                text.append(value.toString()+"  ");
                            }
                        }
                    }
                    text.append("\n");
                }
                Date date1 = new Date();
                SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
                String formattedTime = timeFormat.format(date1);
                String bill = "Date:- " + formattedDate + "\n"+
                        "Time:- " + formattedTime + "\n\n"+
                        info +
                        "\n\n" +
                        text+"\n" +
                        "Thank you come again!";
                jTextArea1.setText(bill);
            }catch(Exception e){
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_jButton6KeyReleased

    private void jButton10KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton10KeyReleased
        DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
        if(evt.getKeyCode()==KeyEvent.VK_F1){
            Home myframe = new Home(bill);
            myframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            myframe.setTitle("POS System");
            myframe.setSize(735,555);
            myframe.setVisible(true);
        }else if(evt.getKeyCode()==KeyEvent.VK_F2){
            jLabel4.setForeground(Color.red);
            jLabel26.setForeground(Color.red);
            jLabel21.setForeground(Color.red);
            jLabel1.setForeground(Color.red);
            jLabel2.setForeground(Color.red);
            jLabel28.setForeground(Color.red);
            jLabel9.setForeground(Color.red);
            jLabel8.setForeground(Color.red);
            jLabel29.setForeground(Color.red);
            jLabel19.setForeground(Color.red);
            jLabel10.setForeground(Color.red);
        }else if(evt.getKeyCode()==KeyEvent.VK_F3){
            try {
                jTextArea1.print();
            } catch (PrinterException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            Color labelColor = jLabel10.getForeground();
            if(labelColor.equals(Color.RED)){
                try{
                    if(!"".equals(jTextField9.getText())){
                        if((jRadioButton9.isSelected() || jRadioButton10.isSelected()) && "".equals(jTextField10.getText())){
                            int price = total;
                            total = price;
                        }else if(jRadioButton9.isSelected()){
                            try{
                                int price = total;
                                int discount = Integer.parseInt(jTextField13.getText());
                                int f1 = price * discount/100;
                                int f2 = price - f1;
                                total = f2;
                            }catch(Exception e){
                                JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                            }
                        }else if(jRadioButton10.isSelected()){
                            try{
                                int price = total;
                                int discount = Integer.parseInt(jTextField13.getText());
                                int f = price - discount;
                                total = f;
                            }catch(Exception e){
                                JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                            }
                        }
                        System.out.println(total);
                        balance = Integer.parseInt(jTextField9.getText()) - total;
                    }else{
                        JOptionPane.showMessageDialog(null, "Please enter a numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                    }
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
                String data1[] = {"Cash","","","Rs." + Integer.parseInt(jTextField9.getText())};
                tblModel.addRow(data1);
                String data2[] = {"Balance","","","Rs." + balance};
                tblModel.addRow(data2);
                TableModel model = jTable2.getModel();
                TableColumnModel columnModel = jTable2.getColumnModel();
                int rowCount = model.getRowCount();
                int colCount = model.getColumnCount() - 1;
                try{
                    StringBuilder text = new StringBuilder();
                    /*for (int i = 0; i < columnModel.getColumnCount() - 1; i++) {
                        Object value = columnModel.getColumn(i).getHeaderValue();
                          if (value != null) {
                              text.append(value.toString()+"  ");
                          }                         
                    }
                    text.append("\n");*/
                    for (int row = 0; row < rowCount; row++) {
                        for (int col = 0; col < colCount; col++) {
                            Object value = model.getValueAt(row, col);
                            if (value != null) {
                                if(col == 4){
                                    text.append("\n");
                                    text.append(value.toString()+"  ");
                                }else{
                                    text.append(value.toString()+"  ");
                                }
                            }
                        }
                        text.append("\n");
                    }
                    Date date1 = new Date();
                    SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
                    String formattedTime = timeFormat.format(date1);
                    String bill = "Date:- " + formattedDate + "\n"+
                        "Time:- " + formattedTime + "\n\n"+
                        info +
                        "\n\n" +
                        text+"\n" +
                        "Thank you come again!";
                    jTextArea1.setText(bill);
                    try {
                        jTextArea1.print();
                    } catch (PrinterException ex) {
                        Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    this.setVisible(false);
                    Balance myframe = new Balance(bill);
                    myframe.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
                    myframe.setTitle("Balance");
                    myframe.setSize(375,175);
                    myframe.setVisible(true);
                }catch(Exception e){
                    System.out.println(e);
                }
            }else{
                try{
                    if(!"".equals(jTextField9.getText())){
                        if((jRadioButton9.isSelected() || jRadioButton10.isSelected()) && "".equals(jTextField10.getText())){
                            int price = total;
                            total = price;
                        }else if(jRadioButton9.isSelected()){
                            try{
                                int price = total;
                                int discount = Integer.parseInt(jTextField13.getText());
                                int f1 = price * discount/100;
                                int f2 = price - f1;
                                total = f2;
                            }catch(Exception e){
                                JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                            }
                        }else if(jRadioButton10.isSelected()){
                            try{
                                int price = total;
                                int discount = Integer.parseInt(jTextField13.getText());
                                int f = price - discount;
                                total = f;
                            }catch(Exception e){
                                JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                            }
                        }
                        System.out.println(total);
                        if (!file.exists()) {
                            try {
                                file.createNewFile();
                            } catch (Exception e) {
                                System.out.println(e);
                            }
                        }
                        Date date = new Date();
                        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                        String formattedDate = formatter.format(date);
                        FileWriter writer;
                        try {
                            writer = new FileWriter(file, true);
                            writer.append("Rs." + total + " " + formattedDate + "\n");
                            // Write any other details you want to save to the file
                            writer.close();
                        } catch (IOException ex) {
                            System.out.println(ex);
                        }
                        balance = Integer.parseInt(jTextField9.getText()) - total;
                    }else{
                        JOptionPane.showMessageDialog(null, "Please enter a numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                    }
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
                String data1[] = {"Cash","","","Rs." + Integer.parseInt(jTextField9.getText())};
                tblModel.addRow(data1);
                String data2[] = {"Balance","","","Rs." + balance};
                tblModel.addRow(data2);
                TableModel model = jTable2.getModel();
                TableColumnModel columnModel = jTable2.getColumnModel();
                int rowCount = model.getRowCount();
                int colCount = model.getColumnCount() - 1;
                try{
                    StringBuilder text = new StringBuilder();
                    /*for (int i = 0; i < columnModel.getColumnCount() - 1; i++) {
                        Object value = columnModel.getColumn(i).getHeaderValue();
                          if (value != null) {
                              text.append(value.toString()+"  ");
                          }                        
                    }
                    text.append("\n");*/
                    for (int row = 0; row < rowCount; row++) {
                        for (int col = 0; col < colCount; col++) {
                            Object value = model.getValueAt(row, col);
                            if (value != null) {
                                if(col == 4){
                                    text.append("\n");
                                    text.append(value.toString()+"  ");
                                }else{
                                    text.append(value.toString()+"  ");
                                }
                            }
                        }
                        text.append("\n");
                    }
                    Date date1 = new Date();
                    SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
                    String formattedTime = timeFormat.format(date1);
                    String bill = "Date:- " + formattedDate + "\n"+
                        "Time:- " + formattedTime + "\n\n"+
                        info +
                        "\n\n" +
                        text+"\n" +
                        "Thank you come again!";
                    jTextArea1.setText(bill);
                    try {
                        jTextArea1.print();
                    } catch (PrinterException ex) {
                        Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    this.setVisible(false);
                    Balance myframe = new Balance(bill);
                    myframe.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
                    myframe.setTitle("Balance");
                    myframe.setSize(375,175);
                    myframe.setVisible(true);
                }catch(Exception e){
                    System.out.println(e);
                }
            }
            String data1[] = {"Cash","","","Rs." + Integer.parseInt(jTextField9.getText())};
            tblModel.addRow(data1);
            String data2[] = {"Balance","","","Rs." + balance};
            tblModel.addRow(data2);
            TableModel model = jTable2.getModel();
            TableColumnModel columnModel = jTable2.getColumnModel();
            int rowCount = model.getRowCount();
            int colCount = model.getColumnCount() - 1;
            try{
                StringBuilder text = new StringBuilder();
                /*for (int i = 0; i < columnModel.getColumnCount() - 1; i++) {
                    Object value = columnModel.getColumn(i).getHeaderValue();
                      if (value != null) {
                          text.append(value.toString()+"  ");
                      }                      
                }
                text.append("\n");*/
                for (int row = 0; row < rowCount; row++) {
                    for (int col = 0; col < colCount; col++) {
                        Object value = model.getValueAt(row, col);
                        if (value != null) {
                            if(col == 4){
                                text.append("\n");
                                text.append(value.toString()+"  ");
                            }else{
                                text.append(value.toString()+"  ");
                            }
                        }
                    }
                    text.append("\n");
                }
                Date date1 = new Date();
                SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
                String formattedTime = timeFormat.format(date1);
                String bill = "Date:- " + formattedDate + "\n"+
                        "Time:- " + formattedTime + "\n\n"+
                        info +
                        "\n\n" +
                        text+"\n" +
                        "Thank you come again!";
                jTextArea1.setText(bill);
                try {
                    jTextArea1.print();
                } catch (PrinterException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
            }catch(Exception e){
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_jButton10KeyReleased

    private void jTextField9KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField9KeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_F1){
            Home myframe = new Home(bill);
            myframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            myframe.setTitle("POS System");
            myframe.setSize(735,555);
            myframe.setVisible(true);
        }else if(evt.getKeyCode()==KeyEvent.VK_F2){
            jLabel4.setForeground(Color.red);
            jLabel26.setForeground(Color.red);
            jLabel21.setForeground(Color.red);
            jLabel1.setForeground(Color.red);
            jLabel2.setForeground(Color.red);
            jLabel28.setForeground(Color.red);
            jLabel9.setForeground(Color.red);
            jLabel8.setForeground(Color.red);
            jLabel29.setForeground(Color.red);
            jLabel19.setForeground(Color.red);
            jLabel10.setForeground(Color.red);
        }else if(evt.getKeyCode()==KeyEvent.VK_F3){
            CustomPrintExample custom = new CustomPrintExample(jTextArea1);
            custom.print();
        }else if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            jButton6.requestFocus();
        }
    }//GEN-LAST:event_jTextField9KeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel) jTable2.getModel();
        if(jTable2.getRowCount()!=0){
            tblModel.removeRow(jTable2.getSelectedRow());
            total = total - temp_tot;
            items = items - temp_item;
            jLabel25.setText(String.valueOf("Rs." + total));
            jLabel27.setText(String.valueOf(items));
        }else{
            if(jTable2.getRowCount()==0){
                JOptionPane.showMessageDialog(this, "Table is Empty.");
            }else{
                JOptionPane.showMessageDialog(this, "Please select single row for delete.");
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel) jTable2.getModel();
        if(jTable2.getRowCount()!=0){
            int selectedIndex = jComboBox1.getSelectedIndex();
            if((jRadioButton1.isSelected() || jRadioButton2.isSelected()) && "".equals(jTextField3.getText())){
                double price = Double.parseDouble(jTextField2.getText());
                tblModel.setValueAt(jComboBox1.getItemAt(selectedIndex), jTable2.getSelectedRow(), 0);
                tblModel.setValueAt(jTextField7.getText()+"", jTable2.getSelectedRow(), 1);
                tblModel.setValueAt("Rs."+jTextField1.getText(), jTable2.getSelectedRow(), 2);
                tblModel.setValueAt("Rs."+jTextField1.getText()+"x"+jTextField7.getText(), jTable2.getSelectedRow(), 3);
                tblModel.setValueAt("Rs." + price, jTable2.getSelectedRow(), 4);
                total = (int) (total + price);
                items = items + Double.parseDouble(jTextField7.getText());
                jLabel25.setText(String.valueOf("Rs." + total));
                jLabel27.setText(String.valueOf(items));
            }else if(jRadioButton1.isSelected()){
                try{
                    double price = Double.parseDouble(jTextField2.getText());
                    int discount = Integer.parseInt(jTextField3.getText());
                    int f1 = (int) (price * discount/100);
                    int f2 = (int) (price - f1);
                    tblModel.setValueAt(jComboBox1.getItemAt(selectedIndex), jTable2.getSelectedRow(), 0);
                    tblModel.setValueAt(jTextField7.getText()+"", jTable2.getSelectedRow(), 1);
                    tblModel.setValueAt("Rs."+jTextField1.getText()+"", jTable2.getSelectedRow(), 2);
                    tblModel.setValueAt("Rs."+jTextField1.getText()+"x"+(100-Integer.parseInt(jTextField3.getText()))+"%", jTable2.getSelectedRow(), 3);
                    tblModel.setValueAt("Rs." + f2, jTable2.getSelectedRow(), 4);
                    total = total + f2;
                    items = items + Double.parseDouble(jTextField7.getText());
                    jLabel25.setText(String.valueOf("Rs." + total));
                    jLabel27.setText(String.valueOf(items));
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
            }else if(jRadioButton2.isSelected()){
                try{
                    //int price = Integer.parseInt(jTextField2.getText());
                    int discount = Integer.parseInt(jTextField3.getText());
                    int f = (int) (discount * Double.parseDouble(jTextField7.getText()));
                    tblModel.setValueAt(jComboBox1.getItemAt(selectedIndex), jTable2.getSelectedRow(), 0);
                    tblModel.setValueAt(jTextField7.getText()+"", jTable2.getSelectedRow(), 1);
                    tblModel.setValueAt("Rs."+jTextField1.getText(), jTable2.getSelectedRow(), 2);
                    tblModel.setValueAt("Rs."+jTextField3.getText()+"x"+jTextField7.getText(), jTable2.getSelectedRow(), 3);
                    tblModel.setValueAt("Rs." + f, jTable2.getSelectedRow(), 4);
                    total = total + f;
                    items = items + Double.parseDouble(jTextField7.getText());
                    jLabel25.setText(String.valueOf("Rs." + total));
                    jLabel27.setText(String.valueOf(items));
                }catch(Exception e){
                    System.out.println(e);
                }
            }else{
                double price = Double.parseDouble(jTextField2.getText());
                tblModel.setValueAt(jComboBox1.getItemAt(selectedIndex), jTable2.getSelectedRow(), 0);
                tblModel.setValueAt(jTextField7.getText()+"", jTable2.getSelectedRow(), 1);
                tblModel.setValueAt("Rs."+jTextField1.getText(), jTable2.getSelectedRow(), 2);
                tblModel.setValueAt("Rs."+jTextField1.getText()+"x"+jTextField7.getText(), jTable2.getSelectedRow(), 3);
                tblModel.setValueAt("Rs." + price, jTable2.getSelectedRow(), 4);
                total = (int) (total + price);
                items = items + Double.parseDouble(jTextField7.getText());
                jLabel25.setText(String.valueOf("Rs." + total));
                jLabel27.setText(String.valueOf(items));
            }
            total = total - temp_tot;
            items = items - temp_item;
            jLabel25.setText(String.valueOf("Rs." + total));
            jLabel27.setText(String.valueOf(items));
        }else{
            if(jTable2.getRowCount()==0){
                JOptionPane.showMessageDialog(this, "Table is Empty.");
            }else{
                JOptionPane.showMessageDialog(this, "Please select single row for delete.");
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
        String tblItem = tblModel.getValueAt(jTable2.getSelectedRow(), 0).toString();
        String tblCount = tblModel.getValueAt(jTable2.getSelectedRow(), 1).toString();
        String tblUnit = tblModel.getValueAt(jTable2.getSelectedRow(), 2).toString();
        String tblFinal = tblModel.getValueAt(jTable2.getSelectedRow(), 4).toString();
        double i = Double.parseDouble(tblCount);
        jComboBox1.setSelectedItem(tblItem);
        int unit = Integer.parseInt(tblUnit.substring(3));
        jTextField1.setText(unit+"");
        jTextField2.setText(String.valueOf(unit*i));
        jTextField7.setText(String.valueOf(i));
        temp_item = i;
        temp_tot = Integer.parseInt(tblFinal.substring(3));
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyReleased
            DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();    
            if(evt.getKeyCode()==KeyEvent.VK_F1){
                Home myframe = new Home(bill);
                myframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
                myframe.setTitle("POS System");
                myframe.setSize(735,555);
                myframe.setVisible(true);
            }else if(evt.getKeyCode()==KeyEvent.VK_F2){
                jLabel4.setForeground(Color.red);
                jLabel26.setForeground(Color.red);
                jLabel21.setForeground(Color.red);
                jLabel1.setForeground(Color.red);
                jLabel2.setForeground(Color.red);
                jLabel28.setForeground(Color.red);
                jLabel9.setForeground(Color.red);
                jLabel8.setForeground(Color.red);
                jLabel29.setForeground(Color.red);
                jLabel19.setForeground(Color.red);
                jLabel10.setForeground(Color.red);
            }else if(evt.getKeyCode()==KeyEvent.VK_F3){
                try {
                    jTextArea1.print();
                } catch (PrinterException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else if(evt.getKeyCode()==KeyEvent.VK_ENTER){
                if(jTable2.getRowCount()!=0){
                    tblModel.removeRow(jTable2.getSelectedRow());
                    total = total - temp_tot;
                    items = items - temp_item;
                    jLabel25.setText(String.valueOf("Rs." + total));
                    jLabel27.setText(String.valueOf(items));
                }else{
                    if(jTable2.getRowCount()==0){
                        JOptionPane.showMessageDialog(this, "Table is Empty.");
                    }else{
                        JOptionPane.showMessageDialog(this, "Please select single row for delete.");
                    }
                }
            }
    }//GEN-LAST:event_jButton2KeyReleased

    private void jButton3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyReleased
            DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();    
            if(evt.getKeyCode()==KeyEvent.VK_F1){
                Home myframe = new Home(bill);
                myframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
                myframe.setTitle("POS System");
                myframe.setSize(735,555);
                myframe.setVisible(true);
            }else if(evt.getKeyCode()==KeyEvent.VK_F2){
                jLabel4.setForeground(Color.red);
                jLabel26.setForeground(Color.red);
                jLabel21.setForeground(Color.red);
                jLabel1.setForeground(Color.red);
                jLabel2.setForeground(Color.red);
                jLabel28.setForeground(Color.red);
                jLabel9.setForeground(Color.red);
                jLabel8.setForeground(Color.red);
                jLabel29.setForeground(Color.red);
                jLabel19.setForeground(Color.red);
                jLabel10.setForeground(Color.red);
            }else if(evt.getKeyCode()==KeyEvent.VK_F3){
                try {
                    jTextArea1.print();
                } catch (PrinterException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else if(evt.getKeyCode()==KeyEvent.VK_ENTER){
                if(jTable2.getRowCount()!=0){
                    int selectedIndex = jComboBox1.getSelectedIndex();
                    if((jRadioButton1.isSelected() || jRadioButton2.isSelected()) && "".equals(jTextField3.getText())){
                        int price = Integer.parseInt(jTextField2.getText());
                        tblModel.setValueAt(jComboBox1.getItemAt(selectedIndex), jTable2.getSelectedRow(), 0);
                        tblModel.setValueAt(jTextField7.getText()+"", jTable2.getSelectedRow(), 1);
                        tblModel.setValueAt("Rs."+jTextField1.getText(), jTable2.getSelectedRow(), 2);
                        tblModel.setValueAt("Rs."+jTextField1.getText()+"x"+jTextField7.getText(), jTable2.getSelectedRow(), 3);
                        tblModel.setValueAt("Rs." + price, jTable2.getSelectedRow(), 4);
                        total = total + price;
                        items = items + Double.parseDouble(jTextField7.getText());
                        jLabel25.setText(String.valueOf("Rs." + total));
                        jLabel27.setText(String.valueOf(items));
                    }else if(jRadioButton1.isSelected()){
                        try{
                            int price = Integer.parseInt(jTextField2.getText());
                            int discount = Integer.parseInt(jTextField3.getText());
                            int f1 = price * discount/100;
                            int f2 = price - f1;
                            tblModel.setValueAt(jComboBox1.getItemAt(selectedIndex), jTable2.getSelectedRow(), 0);
                            tblModel.setValueAt(jTextField7.getText()+"", jTable2.getSelectedRow(), 1);
                            tblModel.setValueAt("Rs."+jTextField1.getText()+"", jTable2.getSelectedRow(), 2);
                            tblModel.setValueAt("Rs."+jTextField1.getText()+"x"+(100-Integer.parseInt(jTextField3.getText()))+"%", jTable2.getSelectedRow(), 3);
                            tblModel.setValueAt("Rs." + f2, jTable2.getSelectedRow(), 4);
                            total = total + f2;
                            items = items + Double.parseDouble(jTextField7.getText());
                            jLabel25.setText(String.valueOf("Rs." + total));
                            jLabel27.setText(String.valueOf(items));
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }else if(jRadioButton2.isSelected()){
                        try{
                            int price = Integer.parseInt(jTextField2.getText());
                            int discount = Integer.parseInt(jTextField3.getText());
                            int f = (int) (discount * Double.parseDouble(jTextField7.getText()));
                            tblModel.setValueAt(jComboBox1.getItemAt(selectedIndex), jTable2.getSelectedRow(), 0);
                            tblModel.setValueAt(jTextField7.getText()+"", jTable2.getSelectedRow(), 1);
                            tblModel.setValueAt("Rs."+jTextField1.getText(), jTable2.getSelectedRow(), 2);
                            tblModel.setValueAt("Rs."+jTextField3.getText()+"x"+jTextField7.getText(), jTable2.getSelectedRow(), 3);
                            tblModel.setValueAt("Rs." + f, jTable2.getSelectedRow(), 4);
                            total = total + f;
                            items = items + Double.parseDouble(jTextField7.getText());
                            jLabel25.setText(String.valueOf("Rs." + total));
                            jLabel27.setText(String.valueOf(items));
                        }catch(Exception e){
                            System.out.println(e);
                        }
                    }else{
                        int price = Integer.parseInt(jTextField2.getText());
                        tblModel.setValueAt(jComboBox1.getItemAt(selectedIndex), jTable2.getSelectedRow(), 0);
                        tblModel.setValueAt(jTextField7.getText()+"", jTable2.getSelectedRow(), 1);
                        tblModel.setValueAt("Rs."+jTextField1.getText(), jTable2.getSelectedRow(), 2);
                        tblModel.setValueAt("Rs."+jTextField1.getText()+"x"+jTextField7.getText(), jTable2.getSelectedRow(), 3);
                        tblModel.setValueAt("Rs." + price, jTable2.getSelectedRow(), 4);
                        total = total + price;
                        items = items + Double.parseDouble(jTextField7.getText());
                        jLabel25.setText(String.valueOf("Rs." + total));
                        jLabel27.setText(String.valueOf(items));
                    }
                    total = total - temp_tot;
                    items = items - temp_item;
                    jLabel25.setText(String.valueOf("Rs." + total));
                    jLabel27.setText(String.valueOf(items));
                }else{
                    if(jTable2.getRowCount()==0){
                        JOptionPane.showMessageDialog(this, "Table is Empty.");
                    }else{
                        JOptionPane.showMessageDialog(this, "Please select single row for delete.");
                    }
                }
            }
    }//GEN-LAST:event_jButton3KeyReleased

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        double i = Double.parseDouble(jTextField1.getText());
        double i1 = i * Double.parseDouble(jTextField7.getText());
        jTextField2.setText(String.valueOf((int)i1));
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jTextField7KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7KeyReleased
        try{
            double i = Double.parseDouble(jTextField1.getText());
            double i1 = i * Double.parseDouble(jTextField7.getText());
            jTextField2.setText(String.valueOf((int)i1));
        }catch(Exception e){
            e.printStackTrace();
        }
        if(evt.getKeyCode()==KeyEvent.VK_F1){
            Home myframe = new Home(bill);
            myframe.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            myframe.setTitle("POS System");
            myframe.setSize(735,555);
            myframe.setVisible(true);
        }else if(evt.getKeyCode()==KeyEvent.VK_F2){
            jLabel4.setForeground(Color.red);
            jLabel26.setForeground(Color.red);
            jLabel21.setForeground(Color.red);
            jLabel1.setForeground(Color.red);
            jLabel2.setForeground(Color.red);
            jLabel28.setForeground(Color.red);
            jLabel9.setForeground(Color.red);
            jLabel8.setForeground(Color.red);
            jLabel29.setForeground(Color.red);
            jLabel19.setForeground(Color.red);
            jLabel10.setForeground(Color.red);
        }else if(evt.getKeyCode()==KeyEvent.VK_F3){
            try {
                jTextArea1.print();
            } catch (PrinterException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
            int selectedIndex = jComboBox1.getSelectedIndex();
            if((jRadioButton1.isSelected() || jRadioButton2.isSelected()) && "".equals(jTextField3.getText())){
                int price = Integer.parseInt(jTextField2.getText());
                String data[] = {jComboBox1.getItemAt(selectedIndex),jTextField7.getText()+"","Rs."+jTextField1.getText(),"Rs."+jTextField1.getText()+"x"+jTextField7.getText(),"Rs." + price};
                tblModel.addRow(data);
                total = total + price;
                items = items + Double.parseDouble(jTextField7.getText());
                jLabel25.setText(String.valueOf("Rs." + total));
                jLabel27.setText(String.valueOf(items));
            }else if(jRadioButton1.isSelected()){
                try{
                    int price = Integer.parseInt(jTextField2.getText());
                    int discount = Integer.parseInt(jTextField3.getText());
                    int f1 = price * discount/100;
                    int f2 = price - f1;
                    String data[] = {jComboBox1.getItemAt(selectedIndex),jTextField7.getText()+"","Rs."+jTextField1.getText(),"Rs."+jTextField1.getText()+"x"+(100-Integer.parseInt(jTextField3.getText()))+"%","Rs." + f2};
                    tblModel.addRow(data);
                    total = total + f2;
                    items = items + Double.parseDouble(jTextField7.getText());
                    jLabel25.setText(String.valueOf("Rs." + total));
                    jLabel27.setText(String.valueOf(items));
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
            }else if(jRadioButton2.isSelected()){
                try{
                    int discount = Integer.parseInt(jTextField3.getText());
                    int dis = Integer.parseInt(jTextField1.getText()) - discount;
                    int f1 = (int) (dis * Double.parseDouble(jTextField7.getText()));
                    int f = (int) (discount * Double.parseDouble(jTextField7.getText()));
                    String data[] = {jComboBox1.getItemAt(selectedIndex),jTextField7.getText()+"","Rs."+jTextField1.getText(),"Rs."+jTextField3.getText()+"x"+jTextField7.getText(),"Rs." + f};
                    tblModel.addRow(data);
                    total = total + f;
                    items = items + Double.parseDouble(jTextField7.getText());
                    jLabel25.setText(String.valueOf("Rs." + total));
                    jLabel27.setText(String.valueOf(items));
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please enter valid numeric number", "Information", JOptionPane.INFORMATION_MESSAGE);
                }
            }else{
                int price = Integer.parseInt(jTextField2.getText());
                String data[] = {jComboBox1.getItemAt(selectedIndex),jTextField7.getText()+"","Rs."+jTextField1.getText(),"Rs."+jTextField1.getText()+"x"+jTextField7.getText(),"Rs." + price};
                tblModel.addRow(data);
                total = total + price;
                items = items + Double.parseDouble(jTextField7.getText());
                jLabel25.setText(String.valueOf("Rs." + total));
                jLabel27.setText(String.valueOf(items));
            }
            jTextField1.setText("");
            jTextField3.setText("");
            jTextField7.setText("0");
            jComboBox1.requestFocus();
        }
    }//GEN-LAST:event_jTextField7KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home(bill).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton10;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JRadioButton jRadioButton9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSpinner jSpinner5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
